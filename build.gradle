plugins {
    id 'java'
    id 'idea'
    id "me.champeau.jmh" version "0.7.1"
    id "io.morethan.jmhreport" version "0.9.0"
}

group = "com.ventooth"
version = "SNAPSHOT"

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

dependencies {
    // Lombok
    jmhCompileOnly("org.projectlombok:lombok:1.18.28")
    jmhAnnotationProcessor("org.projectlombok:lombok:1.18.28")

    // Java Micro Benchmark Harness
    jmhImplementation("org.openjdk.jmh:jmh-core:1.36")
    jmhAnnotationProcessor("org.openjdk.jmh:jmh-generator-annprocess:1.36")
}

test {
    useJUnitPlatform()
}

idea {
    module {
        inheritOutputDirs = true
        downloadJavadoc = true
        downloadSources = true
    }
}

/**
 * Values set here will overrule configurations defined by annotations in the benchmark classes
 *
 * More options can be found at:
 * https://github.com/melix/jmh-gradle-plugin#configuration-options
 *
 * NOTE: These values will **NOT** apply if the benchmarks are launched using the IntelliJ IDEA plugin!
 * See the JMH readme for commandline options when running through IntelliJ:
 * https://github.com/guozheng/jmh-tutorial/blob/master/README.md#jmh-command-line-options
 */
jmh {
    warmupIterations = 3
    warmup = '50ms'

    iterations = 10
    timeOnIteration = '50ms'
    fork = 5

    resultFormat = 'JSON'
}

jmhReport {
    jmhResultPath = project.file("${project.buildDir}/reports/jmh/results.json")
    jmhReportOutput = project.file("${project.buildDir}/reports/jmh")
}

tasks.jmh.finalizedBy tasks.jmhReport
